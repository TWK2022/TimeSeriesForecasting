1，xlsx_to_csv.py
###
args.sheet_name = ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019',
                   '2020', '2021', '2022']  # args.sheet_name为读取sheet名称，填None读取所有sheet
# 企业商品价格指数
args.column = ['month', '总指数', '农产品', '矿产品', '煤油电']  # 取出的数据列名
# 其他存款性公司资产负债表
args.column = ['month', '国外资产', '储备资产', '准备金存款', '库存现金', '对政府债权', '对中央银行债权', '对其他存款性公司债权',
               '对其他金融机构债权', '对非金融机构债权', '对其他居民部门债权', '其他资产', '对非金融机构及住户负债', '纳入广义货币的存款',
               '单位活期存款', '单位定期存款', '个人存款', '不纳入广义货币的存款', '可转让存款', '其他存款', '其他负债', '对中央银行负债',
               '对其他存款性公司负债', '对其他金融性公司负债', '国外负债', '债券发行', '实收资本', '其他负债', '总负债']  # 取出的数据列名
# 存款性公司概览
args.column = ['month', '国外净资产', '国内信贷', '对政府债权(净)', '对非金融部门债权', '对其他金融部门债权', '货币和准货币', '货币',
               '流通中现金', '活期存款', '准货币', '定期存款', '储蓄存款', '其他存款', '不纳入广义货币的存款', '债券', '实收资本',
               '其他(净)']  # 取出的数据列名
# 汇率
args.column = ['month', '一特别提款权单位折合人民币(期末数)', '一美元折合人民币(期末数)']  # 取出的数据列名
# 货币供应量
args.column = ['month', 'M0', 'M1', 'M2']  # 取出的数据列名
# 货币当局资产负债表
args.column = ['month', '外汇', '货币黄金', '其他国外资产', '对政府债权', '对其他存款性公司债权', '对其他金融性公司债权', '对非金融性公司债权',
               '其他资产', '货币发行', '其他存款', '不计入储备货币的金融性公司存款', '发行债券', '国外负债', '政府存款', '自有资金',
               '其他负债', '总负债']  # 取出的数据列名
# 金融机构人民币信贷收支表
args.column = ['month', '各项存款', '流通中货币', '对国际金融机构负债', '各项贷款', '在国际金融机构资产', '资金运用总计']  # 取出的数据列名
# 金融机构外汇信贷收支表
args.column = ['month', '各项存款', '各项贷款', '资金运用总计']  # 取出的数据列名
# 金融机构本外币信贷收支表
args.column = ['month', '各项存款', '对国际金融机构负债', '各项贷款', '在国际金融机构资产', '资金运用总计']  # 取出的数据列名
# hushen300
args.sheet_name = ['day']  # args.sheet_name为读取sheet名称，填None读取所有sheet
args.column = ['day', '开盘价', '最高价', '最低价', '收盘价', '成交量', '成交额', '均价']  # 取出的数据列名
# -------------------------------------------------------------------------------------------------------------------- #
2，merge_csv.py
parser.add_argument('--mark', default=True, type=bool, help='|为防止.csv中有重名，column前加上序号|')
parser.add_argument('--save_path', default=r'../dataset/economy_month.csv', type=str, help='|保存路径|')
args = parser.parse_args()
args.data_dir = '../dataset/'
args.data_path = ['企业商品价格指数.csv', '其他存款性公司资产负债表.csv', '存款性公司概览.csv', '汇率.csv', '货币供应量.csv',
                  '货币当局资产负债表.csv', '金融机构人民币信贷收支表.csv', '金融机构外汇信贷收支表.csv', '金融机构本外币信贷收支表.csv']  # 合并的所有.csv路径
# -------------------------------------------------------------------------------------------------------------------- #
3，month_to_day.py
parser.add_argument('--data_path', default=r'../dataset/economy_month.csv', type=str, help='|数据路径|')
parser.add_argument('--save_path', default=r'../dataset/economy_day.csv', type=str, help='|保存路径|')
# -------------------------------------------------------------------------------------------------------------------- #
4，fill_day.py
parser.add_argument('--data_path', default=r'../dataset/hushen300.csv', type=str, help='|数据路径|')
parser.add_argument('--save_path', default=r'../dataset/hushen300_fill.csv', type=str, help='|保存路径|')
# -------------------------------------------------------------------------------------------------------------------- #
5，merge_csv.py
parser.add_argument('--mark', default=False, type=bool, help='|为防止.csv中有重名，column前加上序号|')
parser.add_argument('--save_path', default=r'../dataset/merge.csv', type=str, help='|保存路径|')
args = parser.parse_args()
args.data_dir = '../dataset/'
args.data_path = ['hushen300_fill.csv', 'economy_day.csv']  # 合并的所有.csv路径
# -------------------------------------------------------------------------------------------------------------------- #
6，add_date.py
parser.add_argument('--data_path', default=r'../dataset/merge.csv', type=str, help='|数据路径|')
parser.add_argument('--save_path', default=r'../dataset/all.csv', type=str, help='|保存路径|')